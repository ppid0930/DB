/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details for updating the instance source from an image.
 */
export interface UpdateInstanceSourceViaImageDetails extends model.UpdateInstanceSourceDetails {
    /**
     * The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "bootVolumeSizeInGBs"?: number;
    /**
     * The OCID of the image used to boot the instance.
     */
    "imageId": string;
    /**
     * The OCID of the Vault service key to assign as the master encryption key for the boot volume.
     */
    "kmsKeyId"?: string;
    "sourceType": string;
}
export declare namespace UpdateInstanceSourceViaImageDetails {
    function getJsonObj(obj: UpdateInstanceSourceViaImageDetails, isParentJsonObj?: boolean): object;
    const sourceType = "image";
    function getDeserializedJsonObj(obj: UpdateInstanceSourceViaImageDetails, isParentJsonObj?: boolean): object;
}
