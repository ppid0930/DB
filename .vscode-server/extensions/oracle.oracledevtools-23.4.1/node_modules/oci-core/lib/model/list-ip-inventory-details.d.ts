/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Required input parameters for retrieving IP Inventory data within the specified compartments of a region.
 *
 */
export interface ListIpInventoryDetails {
    /**
     * Lists the selected regions.
     */
    "regionList": Array<string>;
    /**
     * List the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
     */
    "compartmentList": Array<string>;
    /**
     * List of selected filters.
     */
    "overrideFilters"?: boolean;
    /**
     * The CIDR utilization of a VCN. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "utilization"?: number;
    /**
     * List of overlapping VCNs.
     */
    "overlappingVcnsOnly"?: boolean;
    /**
     * List of IP address types used.
     */
    "addressTypeList"?: Array<model.AddressType>;
    /**
     * List of VCN resource types.
     */
    "resourceTypeList"?: Array<ListIpInventoryDetails.ResourceTypeList>;
    /**
     * Filters the results for the specified string.
     */
    "searchKeyword"?: string;
    /**
     * Provide the sort order ({@code sortOrder}) to sort the fields such as TIMECREATED in descending or descending order, and DISPLAYNAME in case sensitive.
     * <p>
     **Note:** For some \"List\" operations (for example, {@code ListInstances}), sort resources by an availability domain when the resources belong to a single availability domain.
     * If you sort the \"List\" operations without specifying
     * an availability domain, the resources are grouped by availability domains and then sorted.
     *
     */
    "sortBy"?: ListIpInventoryDetails.SortBy;
    /**
     * Specifies the sort order to use. Select either ascending ({@code ASC}) or descending ({@code DESC}) order. The DISPLAYNAME sort order
     * is case sensitive.
     *
     */
    "sortOrder"?: ListIpInventoryDetails.SortOrder;
    /**
     * Most List operations paginate results. Results are paginated for the ListInstances operations. When you call a paginated List operation, the response indicates more pages of results by including the opc-next-page header.
     * For more information, see [List Pagination](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/usingapi.htm#nine).
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "paginationOffset"?: number;
    /**
     * Specifies the maximum number of results displayed per page for a paginated \"List\" call. For more information, see [List Pagination](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/usingapi.htm#nine).
     * Example: {@code 50}
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "paginationLimit"?: number;
}
export declare namespace ListIpInventoryDetails {
    enum ResourceTypeList {
        Resource = "Resource"
    }
    enum SortBy {
        Displayname = "DISPLAYNAME",
        Utilization = "UTILIZATION",
        DnsHostname = "DNS_HOSTNAME",
        Region = "REGION"
    }
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
    function getJsonObj(obj: ListIpInventoryDetails): object;
    function getDeserializedJsonObj(obj: ListIpInventoryDetails): object;
}
