/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The results returned by a {@code ListIpInventory} operation.
 */
export interface IpInventoryCollection {
    /**
     * Species the count for the number of results for the response. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "count"?: number;
    /**
     * The timestamp of the latest update from the database in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2016-08-25T21:10:29.600Z}
     *
     */
    "lastUpdatedTimestamp"?: Date;
    /**
     * The number of compartments per compartments per tenant.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "compartmentsPerTenant"?: number;
    /**
     * Lists {@code IpInventoryVcnSummary} objects.
     *
     */
    "inventoryVcnCollection"?: Array<model.InventoryVcnSummary>;
    /**
     * Indicates the status of the data.
     *
     */
    "message"?: string;
}
export declare namespace IpInventoryCollection {
    function getJsonObj(obj: IpInventoryCollection): object;
    function getDeserializedJsonObj(obj: IpInventoryCollection): object;
}
