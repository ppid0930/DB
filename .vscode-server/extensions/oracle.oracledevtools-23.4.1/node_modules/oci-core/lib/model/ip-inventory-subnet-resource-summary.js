"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IpInventorySubnetResourceSummary = void 0;
var IpInventorySubnetResourceSummary;
(function (IpInventorySubnetResourceSummary) {
    let IpAddressLifetime;
    (function (IpAddressLifetime) {
        IpAddressLifetime["Ephemeral"] = "Ephemeral";
        IpAddressLifetime["Reserved"] = "Reserved";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        IpAddressLifetime["UnknownValue"] = "UNKNOWN_VALUE";
    })(IpAddressLifetime = IpInventorySubnetResourceSummary.IpAddressLifetime || (IpInventorySubnetResourceSummary.IpAddressLifetime = {}));
    let PublicIpLifetime;
    (function (PublicIpLifetime) {
        PublicIpLifetime["Ephemeral"] = "Ephemeral";
        PublicIpLifetime["Reserved"] = "Reserved";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PublicIpLifetime["UnknownValue"] = "UNKNOWN_VALUE";
    })(PublicIpLifetime = IpInventorySubnetResourceSummary.PublicIpLifetime || (IpInventorySubnetResourceSummary.PublicIpLifetime = {}));
    let AssociatedPublicIpPool;
    (function (AssociatedPublicIpPool) {
        AssociatedPublicIpPool["Oracle"] = "ORACLE";
        AssociatedPublicIpPool["Byoip"] = "BYOIP";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AssociatedPublicIpPool["UnknownValue"] = "UNKNOWN_VALUE";
    })(AssociatedPublicIpPool = IpInventorySubnetResourceSummary.AssociatedPublicIpPool || (IpInventorySubnetResourceSummary.AssociatedPublicIpPool = {}));
    let AssignedResourceType;
    (function (AssignedResourceType) {
        AssignedResourceType["Resource"] = "Resource";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AssignedResourceType["UnknownValue"] = "UNKNOWN_VALUE";
    })(AssignedResourceType = IpInventorySubnetResourceSummary.AssignedResourceType || (IpInventorySubnetResourceSummary.AssignedResourceType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    IpInventorySubnetResourceSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    IpInventorySubnetResourceSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(IpInventorySubnetResourceSummary = exports.IpInventorySubnetResourceSummary || (exports.IpInventorySubnetResourceSummary = {}));
//# sourceMappingURL=ip-inventory-subnet-resource-summary.js.map