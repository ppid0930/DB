/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * These are the criteria for selecting an image. This is required if imageId is not specified.
 *
 */
export interface InstanceConfigurationInstanceSourceImageFilterDetails {
    /**
     * The OCID of the compartment containing images to search
     */
    "compartmentId"?: string;
    /**
     * Filter based on these defined tags. Each key is predefined and scoped to a
     * namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     *
     */
    "definedTagsFilter"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
      * The image's operating system.
  * <p>
  Example: {@code Oracle Linux}
  *
      */
    "operatingSystem"?: string;
    /**
      * The image's operating system version.
  * <p>
  Example: {@code 7.2}
  *
      */
    "operatingSystemVersion"?: string;
}
export declare namespace InstanceConfigurationInstanceSourceImageFilterDetails {
    function getJsonObj(obj: InstanceConfigurationInstanceSourceImageFilterDetails): object;
    function getDeserializedJsonObj(obj: InstanceConfigurationInstanceSourceImageFilterDetails): object;
}
