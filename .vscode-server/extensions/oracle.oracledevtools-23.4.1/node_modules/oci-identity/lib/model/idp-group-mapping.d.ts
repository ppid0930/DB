/**
 * Identity and Access Management Service API
 * Use the Identity and Access Management Service API to manage users, groups, identity domains, compartments, policies, tagging, and limits. For information about managing users, groups, compartments, and policies, see [Identity and Access Management (without identity domains)](/iaas/Content/Identity/Concepts/overview.htm). For information about tagging and service limits, see [Tagging](/iaas/Content/Tagging/Concepts/taggingoverview.htm) and [Service Limits](/iaas/Content/General/Concepts/servicelimits.htm). For information about creating, modifying, and deleting identity domains, see [Identity and Access Management (with identity domains)](/iaas/Content/Identity/home.htm).
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
* A mapping between a single group defined by the identity provider (IdP) you're federating with
* and a single IAM Service {@link Group} in Oracle Cloud Infrastructure.
* For more information about group mappings and what they're for, see
* [Identity Providers and Federation](https://docs.cloud.oracle.com/Content/Identity/Concepts/federation.htm).
* <p>
A given IdP group can be mapped to zero, one, or multiple IAM Service groups, and vice versa.
* But each {@code IdPGroupMapping} object is between only a single IdP group and IAM Service group.
* Each {@code IdPGroupMapping} object has its own OCID.
* <p>
**Note:** Any users who are in more than 50 IdP groups cannot be authenticated to use the Oracle
* Cloud Infrastructure Console.
*
*/
export interface IdpGroupMapping {
    /**
     * The OCID of the {@code IdpGroupMapping}.
     */
    "id": string;
    /**
     * The OCID of the {@code IdentityProvider} this mapping belongs to.
     */
    "idpId": string;
    /**
     * The name of the IdP group that is mapped to the IAM Service group.
     */
    "idpGroupName": string;
    /**
     * The OCID of the IAM Service group that is mapped to the IdP group.
     */
    "groupId": string;
    /**
     * The OCID of the tenancy containing the {@code IdentityProvider}.
     */
    "compartmentId": string;
    /**
      * Date and time the mapping was created, in the format defined by RFC3339.
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeCreated": Date;
    /**
     * The mapping's current state.  After creating a mapping object, make sure its {@code lifecycleState} changes
     * from CREATING to ACTIVE before using it.
     *
     */
    "lifecycleState": IdpGroupMapping.LifecycleState;
    /**
     * The detailed status of INACTIVE lifecycleState. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "inactiveStatus"?: number;
}
export declare namespace IdpGroupMapping {
    enum LifecycleState {
        Creating = "CREATING",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: IdpGroupMapping): object;
    function getDeserializedJsonObj(obj: IdpGroupMapping): object;
}
