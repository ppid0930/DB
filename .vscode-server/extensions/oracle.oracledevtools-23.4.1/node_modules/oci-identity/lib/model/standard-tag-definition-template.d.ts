/**
 * Identity and Access Management Service API
 * Use the Identity and Access Management Service API to manage users, groups, identity domains, compartments, policies, tagging, and limits. For information about managing users, groups, compartments, and policies, see [Identity and Access Management (without identity domains)](/iaas/Content/Identity/Concepts/overview.htm). For information about tagging and service limits, see [Tagging](/iaas/Content/Tagging/Concepts/taggingoverview.htm) and [Service Limits](/iaas/Content/General/Concepts/servicelimits.htm). For information about creating, modifying, and deleting identity domains, see [Identity and Access Management (with identity domains)](/iaas/Content/Identity/home.htm).
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The template of the tag definition. This object includes necessary details to create the provided standard tag definition.
 */
export interface StandardTagDefinitionTemplate {
    /**
     * The default description of the tag namespace that users can use to create the tag definition
     */
    "description": string;
    /**
     * The name of this standard tag definition
     */
    "tagDefinitionName": string;
    /**
     * The type of tag definition. Enum or string.
     */
    "type": StandardTagDefinitionTemplate.Type;
    /**
     * List of possible values. An optional parameter that will be present if the type of definition is enum.
     */
    "possibleValues"?: Array<string>;
    /**
     * Is the tag a cost tracking tag. Default will be false as cost tracking tags have been deprecated
     */
    "isCostTracking": boolean;
    /**
     * The mutability of the possible values list for enum tags. This will default to IMMUTABLE for string value tags
     */
    "enumMutability"?: StandardTagDefinitionTemplate.EnumMutability;
}
export declare namespace StandardTagDefinitionTemplate {
    enum Type {
        Enum = "ENUM",
        String = "STRING",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum EnumMutability {
        Immutable = "IMMUTABLE",
        Mutable = "MUTABLE",
        Appendable = "APPENDABLE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: StandardTagDefinitionTemplate): object;
    function getDeserializedJsonObj(obj: StandardTagDefinitionTemplate): object;
}
